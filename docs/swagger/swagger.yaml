basePath: /api/v1
definitions:
  models.Person:
    properties:
      city:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for people.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /people:
    post:
      consumes:
      - application/json
      description: Create person by json
      parameters:
      - description: Create person
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.Person'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
            type: object
      summary: Create a person
      tags:
      - People
  /people/:
    get:
      consumes:
      - application/json
      description: get people
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Person'
            type: array
      summary: List people
      tags:
      - People
  /people/{id}:
    delete:
      consumes:
      - application/json
      description: Delete person by ID
      operationId: int
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Person'
            type: object
      summary: Delete a person
      tags:
      - People
    get:
      consumes:
      - application/json
      description: get person by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
            type: object
      summary: Show a person
      tags:
      - People
    put:
      consumes:
      - application/json
      description: Update person by ID and by json
      operationId: int
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update person
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.Person'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
            type: object
      summary: Update a person
      tags:
      - People
swagger: "2.0"
